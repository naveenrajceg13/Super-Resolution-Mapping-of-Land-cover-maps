
% % function simmap1()
[filename, pathname]=uigetfile('*.*','Select a image');
  if isequal(filename,0) || isequal(pathname,0)
    fn='D:\FYP\h1.jpg';
  else
    fn = fullfile(pathname, filename);
  end
  
a=imread(fn);  
%imshow(a);
[m1,n1,o1]=size(a);
mapsize=input('Enter the Scale Factor ');
m2=m1*mapsize;
n2=n1*mapsize;

outmap=zeros(m2,n2);
outmapp1=zeros(m2,n2);
inmatrix=zeros(mapsize,mapsize);
attraction=zeros(m1,n1);
a=double(a);

%find class proportions for each pixel and store in b matrix
for i=1:m1
    for j=1:n1
    temp=a(i,j); 
   
    b(i,j)=(temp/255)*100;
    b(i,j)=round(b(i,j));
    end
end
% figure
% imshow(b);

x1=1;
y1=1;
up=0;down=0;left=0;right=0;upleft=0;upright=0;downleft=0;downright=0;
final_attraction=zeros(m1*n1);
u=1;
for iii=1:m1
    for jjj=1:n1
        attraction(iii,jjj)=0;
        up=0;down=0;left=0;right=0;upleft=0;upright=0;downleft=0;downright=0;
        if(((iii-1)<1)&&((jjj-1)<1))
                up=1;upleft=1;upright=1;downleft=1;left=1;
                 %fprintf('a(%d,%d)1,1',iii,jjj); 
                 %display(a(iii,jjj));                
        elseif(((iii+1)>m1)&&((jjj-1)<1))
                left=1;down=1;downleft=1;downright=1;upleft=1;
                %fprintf('a(%d,%d)3,1',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((iii-1)<1)&&((jjj+1)>n1))
                right=1;downright=1;upright=1;up=1;upleft=1;
                %fprintf('a(%d,%d)1,3',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((iii+1)>m1)&&((jjj+1)>n1))
                right=1;down=1;downleft=1;downright=1;upright=1;
                %fprintf('a(%d,%d)3,3',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((iii-1)<1))
                up=1;upleft=1;upright=1;
                %fprintf('a(%d,%d)1,2',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((jjj-1)<1))
                left=1;upleft=1;downleft=1;
                %fprintf('a(%d,%d)2,1',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((iii+1)>m1))
                down=1;downright=1;downleft=1;
                %fprintf('a(%d,%d)3,2',iii,jjj); 
                %display(a(iii,jjj));
        elseif(((jjj+1)>n1))
                right=1;downright=1;upright=1;
                %fprintf('a(%d,%d)2,3',iii,jjj); 
                %display(a(iii,jjj));
        else
                up=0;down=0;left=0;right=0;upleft=0;upright=0;downleft=0;downright=0;
                %fprintf('a(%d,%d)',iii,jjj); 
                %display(a(iii,jjj));
        end
               % fprintf('\n for %d \n',a(iii,jjj));
                if(left==0)
                    % fprintf('+%d \n',a(iii,jjj-1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii,jjj-1);
                    final_attraction(u)=a(iii,jjj-1);
                    u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                if(upleft==0)
                    % fprintf('+%d \n',a(iii-1,jjj-1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii-1,jjj-1);
                     final_attraction(u)=a(iii-1,jjj-1);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                if(up==0)
                    % fprintf('+%d \n',a(iii-1,jjj));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii-1,jjj);
                    final_attraction(u)=a(iii-1,jjj);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                if(upright==0)
                    % fprintf('+%d \n',a(iii-1,jjj+1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii-1,jjj+1);
                    final_attraction(u)=a(iii-1,jjj+1);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                
                if(right==0)
                    % fprintf('+%d \n',a(iii,jjj+1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii,jjj+1);
                     final_attraction(u)=a(iii,jjj+1);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                
                if(downright==0)
                   % fprintf('+%d \n',a(iii+1,jjj+1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii+1,jjj+1);
                    final_attraction(u)=a(iii+1,jjj+1);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                if(down==0)
                    % fprintf('+%d \n',a(iii+1,jjj));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii+1,jjj);
                    final_attraction(u)=a(iii+1,jjj);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
                
                if(downleft==0)
                    % fprintf('+%d \n',a(iii+1,jjj-1));
                    attraction(iii,jjj)=attraction(iii,jjj)+a(iii+1,jjj-1);
                    final_attraction(u)=a(iii+1,jjj-1);
                     u=u+1;
                else
                    final_attraction(u)=0;
                    u=u+1;
                end
    end
end

xx=1;
yy=1;
modify_attraction=zeros(m2,n2);
for i=1:m1
    for j=1:n1
        for ii=xx:xx+2
            for jj=yy:yy+2
                modify_attraction(ii,jj)=attraction(i,j);
            end
        end
        yy=yy+3;
        if(yy>n2)
            
                yy=1;
                xx=xx+3;
        end        
    end
end

one_d_array=zeros(m1*n2);
u=1;
for i=1:m2
    for j=1:n2
    one_d_array(u)=modify_attraction(i,j);
    u=u+1;
    end
end

        
%      
%      for q=1:m1
%           for w=1:n1
%               display(a(q,w));
%           end
%      end


   %fprintf('a(%d,%d)',iii,jjj);                     
%dividing the pixels in to sub pixels
for ii=1:m1
        for jj=1:n1
        x=(b(ii,jj) /100)*(mapsize*mapsize);
        x=round(x);
                         
        y=(mapsize*mapsize)-x;
               %network initialisation
         if(x==(mapsize*mapsize))   
                for n = 1:(mapsize*mapsize)
                inmatrix(n) = 1.0;
                end
         else
                   d=magic(mapsize);
                for n = 1:x
                   inmatrix(d(n)) = 1.0;
                end
                for n = x+1:(mapsize*mapsize)
                    inmatrix(d(n))=0.0;
                end
         end
            
               
               
                     for k=1:mapsize
                for l=1:mapsize
                     outmapp1((mapsize*ii)-(mapsize-k),(mapsize*jj)-(mapsize-l))= 255 *( floor( (  1+ tanh(inmatrix(k,l)-0.5))));
                outmap((mapsize*ii)-(mapsize-k),(mapsize*jj)-(mapsize-l))=inmatrix(k,l);
                end
            end
end
end
% figure
% imshow(outmapp1);
counter=0;

 % iteration begins
%Average of the sourrounding sub pixels
% while counter<=5       
for i=1:m2
    for j=1:n2
        if(((i-1)>0) && ((j-1)>0)&& ((i+1)<m2) && ((j+1)<n2) )
            temp1=0.0;
            for k=i-1:i+1
                for l=j-1:j+1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/8;
            
    
        elseif(((i-1)<1) && ((j-1)<1))
            temp1=0.0;
            for k=i:i+1
                for l=j:j+1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/3;
            
        elseif(((i+1)>m2) && ((j-1)<1))
            temp1=0.0;
            for k=i-1:i
                for l=j:j+1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/3;
            
            
        elseif(((i-1)<1) && ((j+1)>n2))
            temp1=0.0;
            for k=i:i+1
                for l=j-1:j
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/3;
            
        
        elseif(((i+1)>m2) && ((j+1)>n2))
            temp1=0.0;
            for k=i-1:i
                for l=j-1:j
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/3;
            
        
        elseif((j-1)<1)
            temp1=0.0;
            for k=i-1:i+1
                for l=j:j+1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/5;
            
        
        elseif( (j+1)>n2)
            temp1=0.0;
            for k=i-1:i+1
                for l=j-1:j
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/5;
            
            
        elseif( (i-1)<1 )
            temp1=0.0;
            for k=i:i+1
                for l=j-1:j +1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/5;
            
            
        
        elseif( (i+1)>m2 )
            temp1=0.0;
            for k=i-1:i
                for l=j-1:j +1
                    temp1=temp1+outmap(k,l);
                end
            end
            temp1=(temp1-outmap(i,j))/5;
        end
         
      h(i,j)=temp1;
 
    end
end
coltot=sum(h);
SD=sum(coltot);